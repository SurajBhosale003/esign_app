@tailwind base;
@tailwind components;
@tailwind utilities;

.custom-card {
  width: 300px; /* Set width */
  margin-top: 16px; /* Set top margin */
  background-color: #283C42; /* Background color */
  color: white; /* Text color */
  padding: 16px 24px; /* Padding */
  border-radius: 8px; /* Border radius */
  border: 2px solid transparent; /* Transparent border */
  transition: border-color 0.3s, background-color 0.3s, color 0.3s; /* Transition effect */

  /* Tailwind CSS classes */
  @apply hover:border-[#283C42] hover:bg-white hover:text-[#283C42] transition-colors duration-300;
}

.custom-card:hover {
  border-color: #283C42; /* Change border color on hover */
  background-color: white; /* Change background color on hover */
  color: #283C42; /* Change text color on hover */
}

/*  Card effect  */
.notification {
    display: flex;
    flex-direction: column;
    isolation: isolate;
    position: relative;
    width: 18rem;
    height: 8rem;
    background: #29292c;
    border-radius: 1rem;
    overflow: hidden;
    /* font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif; */
    font-size: 16px;
    --gradient: linear-gradient(to bottom, #a2c1ca, #507985, #283C42);
    --color: #fff
  }
  
  .notification:before {
    position: absolute;
    content: "";
    inset: 0.0625rem;
    border-radius: 0.9375rem;
    background: #283C42;
    z-index: 2
  }
  
  .notification:after {
    position: absolute;
    content: "";
    width: 0.25rem;
    inset: 0.65rem auto 0.65rem 0.5rem;
    border-radius: 0.125rem;
    background: var(--gradient);
    transition: transform 300ms ease;
    z-index: 4;
  }
  
  .notification:hover:after {
    transform: translateX(0.15rem)
  }
  
  .notititle {
    color: var(--color);
    padding: 0.65rem 0.25rem 0.4rem 1.25rem;
    font-weight: 500;
    font-size: 1.1rem;
    transition: transform 300ms ease;
    z-index: 5;
  }
  
  .notification:hover .notititle {
    transform: translateX(0.15rem)
  }
  
  .notibody {
    color: #99999d;
    padding: 0 1.25rem;
    transition: transform 300ms ease;
    z-index: 5;
  }
  
  .notification:hover .notibody {
    transform: translateX(0.25rem)
  }
  
  .notiglow,
  .notiborderglow {
    position: absolute;
    width: 20rem;
    height: 20rem;
    transform: translate(-50%, -50%);
    background: radial-gradient(circle closest-side at center, white, transparent);
    opacity: 0;
    transition: opacity 300ms ease;
  }
  
  .notiglow {
    z-index: 3;
  }
  
  .notiborderglow {
    z-index: 1;
  }
  
  .notification:hover .notiglow {
    opacity: 0.1
  }
  
  .notification:hover .notiborderglow {
    opacity: 0.1
  }
  
  .note {
    color: var(--color);
    position: fixed;
    top: 80%;
    left: 50%;
    transform: translateX(-50%);
    text-align: center;
    font-size: 0.9rem;
    width: 75%;
  }
/* Card effect end  */
/* .control-buttons {
  display: flex;
  gap: 8px;
  margin-bottom: 10px;
}

.sidebar {
  display: flex;
  flex-direction: column;
  gap: 8px;
  margin-left: 10px;
}

.page-number {
  margin-top: 10px;
}

.component {
  cursor: pointer;
}

#pdf-renderer {
  position: relative;
  width: 100%;
  height: 100%;
} */

.app {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 20px;
}

.control-buttons {
  margin-bottom: 10px;
}

.workspace {
  position: relative;
  width: auto; /* Adjust width as needed */
  height: auto; /* Adjust height as needed */
  border: 1px solid #ccc;
  overflow: hidden;
  margin-bottom: 3rem;
}

.component {
  cursor: pointer;
  /* border-radius: 4px; */
  /* Customize styles for draggable components */
}

.component.text {
  /* Example text component style */
  display: flex;
  align-items: center;
  justify-content: center;
}

.component.image {
  /* Example image component style */
  background-color: #d9f9fc;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 120px; /* Adjust width */
  height: 80px; /* Adjust height */
  position: absolute; /* Ensure position is absolute for draggable functionality */
}

.component.selected {
  border: 1px solid red; /* Example of selected component border */
}

.component img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.workspace input[type='text'] {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  padding: 8px;
  font-size: 14px;
}

.workspace .moveable-control {
  box-sizing: border-box;
  z-index: 1000;
}

/* Example of notification styling */
.notification {
  display: flex;
  flex-direction: column;
  isolation: isolate;
  position: relative;
  width: 18rem;
  height: 8rem;
  background: #29292c;
  border-radius: 1rem;
  overflow: hidden;
  font-size: 16px;
  --gradient: linear-gradient(to bottom, #a2c1ca, #507985, #283C42);
  --color: #fff;
}

.notification:before {
  position: absolute;
  content: "";
  inset: 0.0625rem;
  border-radius: 0.9375rem;
  background: #283C42;
  z-index: 2;
}

.notification:after {
  position: absolute;
  content: "";
  width: 0.25rem;
  inset: 0.65rem auto 0.65rem 0.5rem;
  border-radius: 0.125rem;
  background: var(--gradient);
  transition: transform 300ms ease;
  z-index: 4;
}

.notification:hover:after {
  transform: translateX(0.15rem);
}

.notititle {
  color: var(--color);
  padding: 0.65rem 0.25rem 0.4rem 1.25rem;
  font-weight: 500;
  font-size: 1.1rem;
  transition: transform 300ms ease;
  z-index: 5;
}

.notification:hover .notititle {
  transform: translateX(0.15rem);
}

.notibody {
  color: #99999d;
  padding: 0 1.25rem;
  transition: transform 300ms ease;
  z-index: 5;
}

.notification:hover .notibody {
  transform: translateX(0.25rem);
}

.notiglow,
.notiborderglow {
  position: absolute;
  width: 20rem;
  height: 20rem;
  transform: translate(-50%, -50%);
  background: radial-gradient(circle closest-side at center, white, transparent);
  opacity: 0;
  transition: opacity 300ms ease;
}

.notiglow {
  z-index: 3;
}

.notiborderglow {
  z-index: 1;
}

.notification:hover .notiglow {
  opacity: 0.1;
}

.notification:hover .notiborderglow {
  opacity: 0.1;
}

.note {
  color: var(--color);
  position: fixed;
  top: 80%;
  left: 50%;
  transform: translateX(-50%);
  text-align: center;
  font-size: 0.9rem;
  width: 75%;
}
.templete-app {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 20px;
}

.control-buttons {
  margin-bottom: 10px;
}

.workspace {
  position: relative; 
  width: 297;
  height: 420;
  border: 1px solid #ccc;
  overflow: hidden;
}

.component {
  cursor: pointer;
  /* border-radius: 4px; */
  padding: 2px;
  box-shadow: 0 0 0 1px #283C42;
  overflow: hidden;
  
}

.component.text {
  /* background-color: #f0f0f0; */
  display: flex;
  align-items: center;
  justify-content: center;
}

.component.image {
  background-color: transparent ;
  display: flex;
  align-items: center;
  justify-content: center;
}

.component.selected {
  box-shadow: 0 0 0 2px #4af;
}

.component img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.component input[type='file'] {
  width: 100%;
  height: 100%;
  opacity: 0;
  position: absolute;
  top: 0;
  left: 0;
}

.workspace input[type='text'] {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  padding: 8px;
  font-size: 14px;
}

.workspace .moveable-control {
  box-sizing: border-box;
  z-index: 1000;
}
.doc-temp-scroll-container::-webkit-scrollbar {
  display: none;
}
.doc-temp-scroll-container
{
  -ms-overflow-style: none;
  scrollbar-width: none;
}